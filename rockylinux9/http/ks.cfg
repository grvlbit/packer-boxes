# Kickstart config file
#
# Profile Label: minimal-node-ks
# Description:   Minimal Rocky Linux 9 installation with scratch
#                partiion and small swap space to be used for
#                compute nodes.
#
# Add netcfg=static if network configuration should be turned into a static
# configuration in post kickstart script.
#
#version=RHEL9
# https://access.redhat.com/labs/kickstartconfig/


lang en_US.UTF-8
keyboard --xlayouts=de-CH
network --bootproto=dhcp
rootpw --iscrypted $6$GekUGzNP$8eBCh5mQHmtUfilvEVGtgzAOE3y/G3Ie/ttFU0/sFNpTW3C6tVuIQYzZu8598kh8rBPxzSv3heJqWOtJwXJHB0
authselect --useshadow --passalgo=sha512
selinux --disabled
firewall --disabled
timezone --utc Europe/Zurich

# Disk partitioning
# Clear the Master Boot Record
zerombr

# Partition clearing information
clearpart --all --initlabel
autopart

# System bootloader configuration
bootloader --append="crashkernel=1G-4G:192M,4G-64G:256M,64G-:512M" --location=mbr --boot-drive=sda

#part /boot --ondrive=sda --asprimary --fstype=xfs --size=512
#part pv.01 --ondrive=sda --asprimary --grow --size=1
#volgroup vg_node pv.01
#logvol swap --name=lv_swap --vgname=vg_node --size=2048
#logvol / --fstype=xfs --name=lv_root --vgname=vg_node --size=20480
#logvol /tmp --fstype=xfs --name=lv_tmp --vgname=vg_node --size=20480
#logvol /var --fstype=xfs --name=lv_var --vgname=vg_node --size=20480
#logvol /scratch/local --fstype=xfs --name=lv_scratch --vgname=vg_node --size=1 --grow
# End of disk partitioning

text
skipx
firstboot --disabled
eula --agreed
reboot

%packages --ignoremissing
@Base
@Core
@Development tools
sudo
telnet
wget

# unnecessary firmware
-iwl100-firmware
-iwl1000-firmware
-iwl3945-firmware
-iwl4965-firmware
-iwl5000-firmware
-iwl5150-firmware
-iwl6000-firmware
-iwl6000g2a-firmware
-iwl6050-firmware
-libertas-usb8388-firmware

%end

%post --nochroot --log=/mnt/sysimage/root/ks-post.1.log
hostname=$(hostname -s)
echo "  - Setting hostname to ${hostname}"
hostnamectl set-hostname "${hostname}"
hostnamectl --pretty set-hostname "${hostname}"
cp /etc/hostname /mnt/sysimage/etc/hostname
cp /etc/machine-info /mnt/sysimage/etc/machine-info
%end

%post --log=/root/ks-post.2.log
# Setting up variables for later usage
KS_STRING="Kickstarted on $(date +'%Y-%m-%d')"

echo $KS_STRING
echo $KS_STRING >> /etc/motd

#echo -e "\nConfiguring network settings:"
#DEVICE=$(ip addr show | awk '/inet 10\.1\./{print $NF}')
#echo "  - Using ${DEVICE} as core interface"
#if [[ "`cat /proc/cmdline`" =~ netcfg=static ]]; then
#    echo "  - Converting network configuration from dhcp to static..."
#    IPCIDR=$(ip addr show $DEVICE | awk '/inet /{print $2}')
#    IPADDR=$(echo $IPCIDR | cut -d"/" -f1)
#    PREFIX=$(echo $IPCIDR | cut -d"/" -f2)
#    GATEWAY=$(ip route show | awk '/^default/{print $3; exit}')
#    HWADDR=$(ip addr show $DEVICE | awk '/ether/{print $2}')
#    echo "    Configuring ${DEVICE} (${HWADDR}) using ${IPADDR}/${PREFIX} via ${GATEWAY}"
#
#cat > /etc/sysconfig/network-scripts/ifcfg-$DEVICE <<EOF
#TYPE=Ethernet
#BOOTPROTO=none
#NAME=$DEVICE
#DEVICE=$DEVICE
#ONBOOT=yes
#IPADDR=$IPADDR
#PREFIX=$PREFIX
#HWADDR=$HWADDR
#GATEWAY=$GATEWAY
#EOF
#
#fi
#
#echo "  - Disallow changes to /etc/resolv.conf and /etc/ntp.conf due to DHCP options."
#cat >> /etc/sysconfig/network-scripts/ifcfg-$DEVICE <<EOF
#PEERDNS=no
#PEERNTP=no
#EOF
#
#echo -e "\nUpdate the installed base for the first time using already our mirrors."
#curl -s -o /etc/yum.repos.d/Rocky-AppStream.repo http://file01/ks/resources/Rocky-BaseOS.repo|| curl -s -o /root/.ssh/authorized_keys http://file02/ks/resources/Rocky-BaseOS.repo
#curl -s -o /etc/yum.repos.d/Rocky-AppStream.repo http://file01/ks/resources/Rocky-AppStream.repo|| curl -s -o /root/.ssh/authorized_keys http://file02/ks/resources/Rocky-AppStream.repo
/usr/bin/yum clean all
/usr/bin/yum makecache
/usr/bin/yum -y update

echo -e "\nFetch preliminary authorized_keys file to allow passwordless access from service host."
mkdir -p /root/.ssh
chmod 700 /root/.ssh
curl -s -o /root/.ssh/authorized_keys http://file01/ks/resources/authkeys || curl -s -o /root/.ssh/authorized_keys http://file02/ks/resources/authkeys

# Add a user named packer
#user --groups=wheel --name=vagrant --passwrod=$6$wPSgFyVU/WslEMQr$/SW3T7HPI5Z3hQyeDVmwF1pSehUJSMc2VZq8SbP23HPveRVlHMw0a4MR6yRH5ApDeG2WcbMg/AhDvguvppzy5 --iscrypted --gecos="vagrant"
/usr/sbin/groupadd -g 501 vagrant
/usr/sbin/useradd vagrant -u 501 -g vagrant
echo "vagrant"|passwd --stdin vagrant
echo "vagrant        ALL=(ALL)       NOPASSWD: ALL" >> /etc/sudoers.d/vagrant
chmod 0440 /etc/sudoers.d/vagrant

# Disable quiet boot and splash screen
#sed --follow-symlinks -i "s/ rhgb quiet//" /mnt/sysimage/etc/default/grub
#sed --follow-symlinks -i "s/ rhgb quiet//" /mnt/sysimage/boot/grub2/grubenv

# Passwordless sudo for the user 'vagrant'
#echo "vagrant ALL=(ALL) NOPASSWD: ALL" >> /mnt/sysimage/etc/sudoers.d/vagrant

%end

